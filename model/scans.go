// DON'T EDIT *** generated by scaneo *** DON'T EDIT //
package model

import "database/sql"

func ScanUser(r *sql.Row) (User, error) {
	var s User
	if err := r.Scan(
		&s.ID,
		&s.Name,
		&s.Uuid,
		&s.PartnerId,
		&s.Created,
		&s.Updated,
	); err != nil {
		return User{}, err
	}
	return s, nil
}

func ScanUsers(rs *sql.Rows) ([]User, error) {
	structs := make([]User, 0, 16)
	var err error
	for rs.Next() {
		var s User
		if err = rs.Scan(
			&s.ID,
			&s.Name,
			&s.Uuid,
			&s.PartnerId,
			&s.Created,
			&s.Updated,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanShift(r *sql.Row) (Shift, error) {
	var s Shift
	if err := r.Scan(
		&s.ID,
		&s.UserId,
		&s.Name,
		&s.Color,
		&s.Date,
		&s.Created,
		&s.Updated,
	); err != nil {
		return Shift{}, err
	}
	return s, nil
}

func ScanShifts(rs *sql.Rows) ([]Shift, error) {
	structs := make([]Shift, 0, 16)
	var err error
	for rs.Next() {
		var s Shift
		if err = rs.Scan(
			&s.ID,
			&s.UserId,
			&s.Name,
			&s.Color,
			&s.Date,
			&s.Created,
			&s.Updated,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanTempKey(r *sql.Row) (TempKey, error) {
	var s TempKey
	if err := r.Scan(
		&s.ID,
		&s.UserID,
		&s.TempKey,
		&s.Created,
		&s.Updated,
	); err != nil {
		return TempKey{}, err
	}
	return s, nil
}

func ScanTempKeys(rs *sql.Rows) ([]TempKey, error) {
	structs := make([]TempKey, 0, 16)
	var err error
	for rs.Next() {
		var s TempKey
		if err = rs.Scan(
			&s.ID,
			&s.UserID,
			&s.TempKey,
			&s.Created,
			&s.Updated,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}
